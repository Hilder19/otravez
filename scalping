import MetaTrader5 as mt5
import pandas as pd
import talib as ta
import time

# Conectar a MetaTrader 5
mt5.initialize()

# Configurar el símbolo (par de divisas), el intervalo y la cantidad de datos históricos
symbol = "EURUSD"
timeframe = mt5.TIMEFRAME_M1  # Gráfico de 1 minuto (M1)
num_bars = 200  # Últimos 200 datos de barras

# Función para obtener los datos históricos
def get_data(symbol, timeframe, num_bars):
    rates = mt5.copy_rates_from_pos(symbol, timeframe, 0, num_bars)
    data = pd.DataFrame(rates)
    data['time'] = pd.to_datetime(data['time'], unit='s')
    return data

# Función para detectar microtendencias alcistas o bajistas
def detect_microtrend(data):
    # Calcular indicadores: EMA, RSI, MACD, Bandas de Bollinger
    data['ema5'] = ta.EMA(data['close'], timeperiod=5)
    data['ema13'] = ta.EMA(data['close'], timeperiod=13)
    data['rsi'] = ta.RSI(data['close'], timeperiod=14)
    macd, signal, _ = ta.MACD(data['close'], fastperiod=12, slowperiod=26, signalperiod=9)
    data['macd'] = macd
    data['signal'] = signal
    upper_band, middle_band, lower_band = ta.BBANDS(data['close'], timeperiod=20)

    # Detectar microtendencias
    last_row = data.iloc[-1]

    # Detectar microtendencia alcista (EMA cruce, RSI, MACD, Bandas de Bollinger)
    if last_row['ema5'] > last_row['ema13'] and last_row['rsi'] > 50 and last_row['macd'] > last_row['signal'] and last_row['close'] > upper_band[-1]:
        return 'Alcista'
    
    # Detectar microtendencia bajista (EMA cruce, RSI, MACD, Bandas de Bollinger)
    if last_row['ema5'] < last_row['ema13'] and last_row['rsi'] < 50 and last_row['macd'] < last_row['signal'] and last_row['close'] < lower_band[-1]:
        return 'Bajista'
    
    return 'Neutral'

# Bucle principal para monitorear el mercado en tiempo real
while True:
    data = get_data(symbol, timeframe, num_bars)
    trend = detect_microtrend(data)
    
    print(f"Microtendencia actual en {symbol}: {trend}")
    
    # Esperar 1 minuto antes de obtener nuevos datos
    time.sleep(60)

